(include "./definitions.yuck")
(include "./system-menu.yuck")
(include "./power-menu.yuck")
(include "./greeter-menu.yuck")

(defwindow bar
  :exclusive true
  :monitor 0
  :stacking "bottom"
  :focusable true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "35px"
                      :anchor "top center")
  (bar-segments)
)

(defwidget bar-segments []
  (box
    :class {workspace-active.lastwindowtitle == "" ? "bar-segments-no-bg" : "bar-segments"}
    :space-evenly true
    (bar-segment :name "top-left" (box :halign "center" (workspaces)))
    (bar-segment :name "top-center" (clock))
    (bar-segment :name "top-right" (box :space-evenly true :halign "center" (icons) (power-button)))
  )
)

(defwidget bar-segment [name]
  (box :class "bar-segment ${name}"
       :space-evenly true
       (children)))

(defwidget workspaces []
  (box
    :class "workspaces"
    :valign "center"
    :halign "start"
    :space-evenly true
    :spacing 10
    :width 380
    :height 40
    (for workspace in workspaces-list
      (button
        :class "workspace ${workspace.active ? "workspace-active" : workspace.used ? "workspace-used" : "workspace-unused"}"
        :onclick "hyprctl dispatch workspace ${workspace.id}"
        "${workspace.icon}"
      )
    )
  )
)

(defwidget clock []
  (box
    :class "clock"
    "${time}"
  )
)

(defwidget icons []
  (box
    :class "icons"
    :spacing 5
    :height 40
    :width 160
    (wifi) (bluetooth) (volume) (battery) (expand)
  )
)

(defwidget wifi []
  (button
    :class "${network-status == "Disconnected" ? "network-err" : "wifi-icon"} icon"
    :tooltip "${network-status}"
    :onclick "nmtui"
    "${network-icon}"
  )
)

(defwidget bluetooth []
  (button
    :class "icon ${bluetooth-status == "Off" ? "" : "bluetooth-icon"}"
    :tooltip "${bluetooth-battery}"
    :onclick "blueberry"
    "${bluetooth-icon}")
)

(defwidget battery []
  (button
    :class "icon ${battery-available ? "battery-icon" : ""}"
    :style "background-color: ${battery-color};"
    "${battery-icon}"
  )
)

(defwidget volume []
  (button
    :class "icon ${volume-status == "Off" ? "" : "volume-icon"}"
    "${volume-icon}"
  )
)

(defwidget expand []
  (button
    :class "icon expand-icon"
    :valign "center"
    :halign "center"
    :onclick "./scripts/menu-reveal --toggle-system"
    "󰍝"
  )
)

(defwidget power-button []
  (button
    :class "icon power-button-icon"
    :halign "end"
    :width 52
    :height 40
    :onclick "./scripts/menu-reveal --toggle-power"
    "󰐥"
  )
)