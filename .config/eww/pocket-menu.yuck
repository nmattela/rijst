(defvar pocket-menu-open false)
(defvar active-player-index 0)

; This is the menu that opens when clicking on the clock on the hotbar
(defwindow pocket-menu
    :monitor 0
    :focusable false
    :stacking "overlay"
    :namespace "bar"
    :exclusive true
    :geometry (geometry
                    :x 0
                    :y 0
                    :width 0
                    :height 0
                    :anchor "center")
    (pocket)
)

(defwidget pocket []
    (revealer
        :transition "crossfade"
        :reveal pocket-menu-open
        (eventbox
            :onclick "./scripts/menu-reveal --toggle-pocket"
            :width 1720
            :height 880
            (box
                :class "pocket-root"
                :orientation "vertical"
                :space-evenly true
                :width 800
                :height 300
                (box
                    :orientation "horizontal"
                    :space-evenly true
                    (box
                        :orientation "vertical"
                        (pocket-profile)
                        (pocket-clock)
                    )
                    (pocket-player
                        :players {music-players}
                        :player {music-players[active-player-index]}
                    )
                    (pocket-weather)
                )
                (box
                    (pocket-stats)
                )
            )
        )
    )
)

(defwidget pocket-player [players player]
    (box
        :class "pocket-widget pocket-player"
        :style "background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(\"${player.metadata.artUrl}\");"
        :orientation "vertical"
        :space-evenly false
        :halign "center"
        :spacing 10
        (box
            :class "pocket-player-description"
            :orientation "vertical"
            (label :class "pocket-player-title" :limit-width 50 :halign "start" :text "${player.metadata.title}")
            (label :class "pocket-player-album" :limit-width 50 :halign "start" :text "${player.metadata.artist}")
        )
        (box
            :class "pocket-player-controls"
            :orientation "horizontal"
            :halign "center"
            :space-evenly false
            :spacing 50
            (button
                :class "pocket-player-shuffle"
                :onclick "ricecli music player shuffle ${player.name} Toggle"
                {player.shuffle == "On" ? "󰒟" : "󰒞"}
            )
            (button
                :class "pocket-player-prev"
                :onclick "ricecli music player previous ${player.name}"
                "󰒮"
            )
            (button
                :class "pocket-player-pause"
                :onclick "ricecli music player toggle ${player.name}"
                {player.status == "Playing" ? "󰏤" : "󰐊"}
            )
            (button
                :class "pocket-player-pause"
                :onclick "ricecli music player next ${player.name}"
                "󰒭"
            )
            (button
                :class "pocket-player-loop"
                :onclick "ricecli music player loop ${player.name} ${player.loop == "None" ? "Track" : player.loop == "Track" ? "Playlist" : "None"}"
                {player.loop == "None" ? "󰑗" : player.loop == "Track" ? "󰑘" : "󰑖"}
            )
        )
        (scale
            :class "pocket-player-progress"
            :orientation "horizontal"
<<<<<<< HEAD
            :visible {player.length > 0}
=======
            ; :visible {stati[index].length > 0}
>>>>>>> 4dd67faf74809a061278312701b0a894e35109d2
            :min 0
            :max {player.length}
            :value {player.position}
            :onchange "ricecli music player position ${player.name} {}"
            :width 500
        )
        (box
            :orientation "horizontal"
            (for p in players
                (button
                    :class "pocket-player-selector"
                    :onclick "${EWW_CMD} update active-player-index=${player.index}"
                    {player.name == p.name ? "•" : "◦"}
                )
            )
        )
    )
)

(defwidget pocket-profile []
    (box
        :class "pocket-widget pocket-profile"
        :style "background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(\"./images/profile.png\");"
        :orientation "vertical"
        :space-evenly true
        (image
            :path "./images/profile-circle.png"
            :image-width 64
            :image-height 64
        )
        (label :class "pocket-profile-name" :text "Welcome, Nicolas!")
    )
)

(defwidget pocket-clock []
    (box
        :class "pocket-widget pocket-clock"
        :orientation "vertical"
        (label :text {formattime(EWW_TIME, "%H:%M")})
        (label :text {formattime(EWW_TIME, "%Y %m %d")})
    )
)

(defwidget pocket-weather []
    (box
        :class "pocket-widget pocket-weather"
<<<<<<< HEAD
        :style "background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.7)), url(\"${weather.image}\");"
=======
        :style "background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.7)), url(\"${weather-image}\");"
>>>>>>> 4dd67faf74809a061278312701b0a894e35109d2
        :orientation "vertical"
        (label :class "pocket-weather-stat" :style "color: ${weather.color};" :halign "start" :text "${weather.description}")
        (label :class "pocket-weather-temp" :halign "start" :text "${weather.temperature}°C")
        (label :class "pocket-weather-icon" :style "color: ${weather.color};" :halign "end" :text "${weather.icon}")
    )
)

(defwidget pocket-stats-scale [class value icon]
    (box
        :orientation "horizontal"
        :space-evenly false
        :spacing 10
        :halign "center"
        (label :text "${icon}")
        (label :text "${value}%")
        (scale
            :class "pocket-stats-scale ${class}"
            :width 1500
            :value value
            :orientation "horizontal"
        )
    )
)

(defwidget pocket-stats []
    (box
        :class "pocket-widget pocket-stats"
        :orientation "vertical"
        (pocket-stats-scale :class "pocket-stats-cpu" :value {round(EWW_CPU.avg, 0)} :icon "")
        (pocket-stats-scale :class "pocket-stats-memory" :value {round(EWW_RAM.used_mem_perc, 0)} :icon "")
        (pocket-stats-scale :class "pocket-stats-disk" :value {round(EWW_DISK["/"].used_perc, 0)} :icon "󱛟")
    )
)
